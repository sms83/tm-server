{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/filters/filter.pipe.ts","webpack:///./src/app/components/filters/findtaskname.pipe.ts","webpack:///./src/app/components/index/index.component.css","webpack:///./src/app/components/index/index.component.html","webpack:///./src/app/components/index/index.component.ts","webpack:///./src/app/tasks.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<hr>\\r\\n<div>\\r\\n  <h2 style=\\\"text-align:center;\\\">TASK MANAGER</h2>\\r\\n</div>\\r\\n<hr>\\r\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a routerLink=\\\"create\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\r\\n            Add Task\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a routerLink=\\\"index\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\r\\n           View All Tasks\\r\\n          </a>\\r\\n        </li> \\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n\\r\\n<div style=\\\"width:100%; padding:0 20% 0 20%\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n\n\n// import 3rd party modules -- ++ imports\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n\n\n// import component -- ++ in Declaration\nimport { AppComponent } from './app.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { FilterPipe} from './components/filters/filter.pipe';\n\n\n\n//import service -- ++ in provider\nimport { TasksService } from './tasks.service';\nimport { FindtasknamePipe } from './components/filters/findtaskname.pipe';\n\n\n\n\n\nconst routes: Routes = [\n  {path:'create', component :CreateComponent},\n  {path:'index', component :IndexComponent},\n  {path:'edit/:id', component :EditComponent},\n  {path:'finish/:id', component :IndexComponent},\n  { path: '', redirectTo: '/create', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateComponent,\n    IndexComponent,\n    EditComponent,\n    FilterPipe,\n    FindtasknamePipe\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    NgbModule.forRoot(),\n    HttpClientModule,\n    ReactiveFormsModule,\n    FilterPipeModule,\n    FormsModule\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  providers: [TasksService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n<div class=\\\"card\\\"  style=\\\"width:75%; height:50%\\\">\\r\\n    \\r\\n    <div class=\\\"card-body\\\">\\r\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"addTaskForm\\\" novalidate>\\r\\n              \\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"col-md-4\\\">Task Name</label>\\r\\n                <input type=\\\"text\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" \\r\\n                name=\\\"task\\\" formControlName=\\\"task\\\" #task/>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"addTaskForm.controls['task'].invalid && \\r\\n            (addTaskForm.controls['task'].dirty || addTaskForm.controls['task'].touched)\\\" \\r\\n            class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"addTaskForm.controls['task'].errors.required\\\">\\r\\n                Task Name is required.\\r\\n                </div>\\r\\n            </div>\\r\\n          \\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-md-4\\\">Parent Task</label>\\r\\n               <input name=\\\"parent_id\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\r\\n               (selectItem)=\\\"selectedItem($event)\\\" \\r\\n               [(ngModel)]=\\\"selectedParent\\\" [ngbTypeahead]=\\\"search\\\" \\r\\n               [resultFormatter]=\\\"formatter\\\" [inputFormatter]=\\\"formatter\\\" \\r\\n               [ngModelOptions]=\\\"{standalone: true}\\\"/>\\r\\n            </div>\\r\\n      \\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"control-label col-sm-2\\\">Priority:</label>\\r\\n              <div class=\\\"col-sm-10\\\">   \\r\\n                    <input type=\\\"range\\\" min=\\\"0\\\" max=\\\"30\\\" class=\\\"form-control\\\" name=\\\"priority\\\"\\r\\n                    formControlName=\\\"priority\\\" #priority/>\\r\\n                   \\r\\n            </div>\\r\\n          </div>\\r\\n         <div *ngIf=\\\"addTaskForm.controls['priority'].invalid && \\r\\n            (addTaskForm.controls['priority'].dirty || addTaskForm.controls['priority'].touched)\\\" \\r\\n            class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"addTaskForm.controls['priority'].errors.required\\\">\\r\\n                Priority is required.\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        \\r\\n          <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"col-md-4\\\">Start Date</label>\\r\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"start_date\\\" \\r\\n                formControlName=\\\"start_date\\\" #start_date/>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"addTaskForm.controls['start_date'].invalid && \\r\\n              (addTaskForm.controls['start_date'].dirty || addTaskForm.controls['start_date'].touched)\\\" \\r\\n              class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"addTaskForm.controls['start_date'].errors.required\\\">\\r\\n                  Start Date is required.\\r\\n                </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"col-md-4\\\">End Date</label>\\r\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"end_date\\\" \\r\\n                formControlName=\\\"end_date\\\" #end_date/>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"addTaskForm.controls['end_date'].invalid && \\r\\n              (addTaskForm.controls['end_date'].dirty || addTaskForm.controls['end_date'].touched)\\\" \\r\\n              class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"addTaskForm.controls['end_date'].errors.required\\\">\\r\\n                  End Date is required.\\r\\n                </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <button (click)=\\\"addTask(task.value,priority.value,start_date.value,end_date.value)\\\" \\r\\n                [disabled]=\\\"addTaskForm.pristine || addTaskForm.invalid\\\" \\r\\n                class=\\\"btn btn-primary btn-xs\\\">Create Task</button>\\r\\n          </div>\\r\\n      </form>\\r\\n      </div>\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { TasksService } from '../../tasks.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Tasks } from '../model/Tasks';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css']\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  public model: any;\r\n   \r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,private tasksservice: TasksService, private fb: FormBuilder) \r\n    { this.createForm(); }\r\n\r\n    task : Tasks[];\r\n    addTaskForm: FormGroup;\r\n    \r\n    \r\n    parent_id : any;\r\n    search:any;\r\n    formatter:any;\r\n    selectedParent:{_id:string, task:string} = null;\r\n    clickedItem:string;\r\n    tasksResult:{_id:string, task:string}[];\r\n    \r\n    ngbdTypeaheadTemplate() \r\n    {\r\n      this.formatter = (x: {task: string}) => {\r\n        console.log(x);\r\n        return x.task;\r\n      }; \r\n    this.search = (text$: Observable<string>) =>\r\n    text$\r\n      .debounceTime(200)\r\n      .distinctUntilChanged()\r\n      .map(term => term === '' ? []\r\n        : this.tasksResult.filter(tr => tr.task.toLowerCase().indexOf(term.toLowerCase()) > -1));\r\n    }\r\n  \r\n    selectedItem(item){\r\n      this.clickedItem=item.item._id;\r\n      console.log('here we go');\r\n      console.log(this.clickedItem);\r\n    }\r\n    \r\n  \r\n\r\n createForm() {\r\n    this.addTaskForm = this.fb.group({\r\n      task: ['', Validators.required ],\r\n      parent_id :[''],\r\n      priority : ['', Validators.required ],\r\n      start_date: ['', Validators.required ],\r\n      end_date: ['', Validators.required ]     \r\n   });\r\n  }\r\n\r\n  addTask(task,priority,start_date,end_date) {\r\n   if(this.clickedItem)\r\n   this.parent_id = this.clickedItem;\r\n   else\r\n   this.parent_id =\"\";\r\n\r\n    this.tasksservice.addTaskRecord(task,this.parent_id,priority,start_date,end_date);\r\n    this.router.navigate(['index']);\r\n    window.location.reload();\r\n  }\r\n  \r\n  findalltask()\r\n    {\r\n      return this.tasksservice\r\n      .getAllTasks()\r\n      .subscribe((data: any) => {\r\n      this.tasksResult = data;\r\n      console.log(this.tasksResult);\r\n    });\r\n     \r\n    }\r\n\r\n\r\n  \r\n  ngOnInit() {\r\n    this.ngbdTypeaheadTemplate();\r\n    this.findalltask();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <hr>\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"editTaskForm\\\" novalidate>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-md-4\\\">Task Name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"task\\\" formControlName=\\\"task\\\" #task \\r\\n                    [(ngModel)] = \\\"tasks.task\\\"/>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"editTaskForm.controls['task'].invalid && \\r\\n                (editTaskForm.controls['task'].dirty || editTaskForm.controls['task'].touched)\\\" \\r\\n                class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"editTaskForm.controls['task'].errors.required\\\">\\r\\n                    Task Name is required.\\r\\n                    </div>\\r\\n                </div>\\r\\n              \\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"col-md-4\\\">Parent Task</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"parent_id\\\"\\r\\n                   formControlName=\\\"parent_id\\\" />\\r\\n                </div>\\r\\n               \\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"control-label col-sm-2\\\">Priority:</label>\\r\\n                  <div class=\\\"col-sm-10\\\">   \\r\\n                        <input type=\\\"range\\\"  min=\\\"0\\\" max=\\\"30\\\" class=\\\"form-control\\\" name=\\\"priority\\\"\\r\\n                        formControlName=\\\"priority\\\" #priority  [(ngModel)] = \\\"tasks.priority\\\"/>\\r\\n                </div>\\r\\n              </div>\\r\\n             <div *ngIf=\\\"editTaskForm.controls['priority'].invalid && \\r\\n                (editTaskForm.controls['priority'].dirty || editTaskForm.controls['priority'].touched)\\\" \\r\\n                class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"editTaskForm.controls['priority'].errors.required\\\">\\r\\n                    Priority is required.\\r\\n                    </div>\\r\\n                </div>\\r\\n    \\r\\n            \\r\\n              <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-md-4\\\">Start Date</label>\\r\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"start_date\\\"  formControlName=\\\"start_date\\\"\\r\\n                    [ngModel] =\\\"tasks.start_date | date:'yyyy-MM-dd'\\\" #start_date>\\r\\n                   \\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"editTaskForm.controls['start_date'].invalid && \\r\\n                  (editTaskForm.controls['start_date'].dirty || editTaskForm.controls['start_date'].touched)\\\" \\r\\n                  class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"editTaskForm.controls['start_date'].errors.required\\\">\\r\\n                      Start Date is required.\\r\\n                    </div>\\r\\n            </div>\\r\\n    \\r\\n    \\r\\n            <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-md-4\\\">End Date</label>\\r\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"end_date\\\"  formControlName=\\\"end_date\\\"\\r\\n                     [ngModel] =\\\"tasks.end_date | date:'yyyy-MM-dd'\\\" #end_date>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"editTaskForm.controls['end_date'].invalid && \\r\\n                  (editTaskForm.controls['end_date'].dirty || editTaskForm.controls['end_date'].touched)\\\" \\r\\n                  class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"editTaskForm.controls['end_date'].errors.required\\\">\\r\\n                      End Date is required.\\r\\n                    </div>\\r\\n            </div>\\r\\n    \\r\\n    \\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <button (click)=\\\"updateTask(task.value,priority.value,start_date.value,end_date.value)\\\" \\r\\n                    [disabled]=\\\"editTaskForm.pristine || editTaskForm.invalid\\\" \\r\\n                    class=\\\"btn btn-primary\\\">Update Task</button> &nbsp; \\r\\n                    <a [routerLink]=\\\"['/index']\\\" class=\\\"btn btn-primary\\\">Cancel</a>\\r\\n              </div>\\r\\n          </form>\\r\\n          </div>\\r\\n    </div>\\r\\n    </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { TasksService } from '../../tasks.service';\r\nimport { Tasks } from '../model/Tasks';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.css']\r\n})\r\nexport class EditComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private tasksservice: TasksService, \r\n    private fb: FormBuilder) \r\n    {\r\n       this.createForm(); \r\n    }\r\n\r\n  editTaskForm: FormGroup;\r\n  tasks: any = {};\r\n\r\n   createForm() {\r\n    this.editTaskForm = this.fb.group({\r\n      task: ['', Validators.required ],\r\n      parent_id: [''],\r\n      priority : ['', Validators.required ],\r\n      start_date: ['', Validators.required ],\r\n      end_date: ['', Validators.required ],\r\n      \r\n   });\r\n  }\r\n\r\n   ngOnInit() {\r\n    this.findbyID();\r\n  }\r\n\r\n  findbyID()\r\n  {\r\n    this.route.params.subscribe(params => {\r\n      this.tasksservice.getTaskByID(params['id']).subscribe(res => {\r\n        this.tasks = res;\r\n    });\r\n    });\r\n   \r\n  }\r\n\r\n  updateTask(task,priority,start_date,end_date) {\r\n    this.route.params.subscribe(params => {\r\n       this.tasksservice.updateRecord(task,priority,start_date,end_date, params['id']);\r\n       this.router.navigate(['index']);\r\n       window.location.reload();\r\n    });\r\n  }\r\n\r\n  \r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Tasks } from '../model/Tasks';\r\nimport { TasksService } from '../../tasks.service';\r\n@Pipe({\r\n  name: 'filter',\r\n  pure: false\r\n})\r\n\r\n\r\nexport class FilterPipe implements PipeTransform {\r\n    constructor(private tasksservice: TasksService)  {}   \r\n        \r\n    transform(items: any[], q1: string, q2: any,q3: any, q4: any,q5: string,q6: string){\r\n        if (items && items.length){  \r\n            \r\n            return items.filter(item =>{  \r\n\r\n                if (q1 && item.task.toLowerCase().indexOf(q1.toLowerCase()) === -1){\r\n                    return false;\r\n                }\r\n              \r\n                    if (q2 && q3){\r\n                        if(!(item.priority >=  parseInt(q2) && item.priority <=  parseInt(q3))){\r\n                            return false;\r\n                        }                   \r\n                    }\r\n                    else{\r\n                        if(q2){\r\n                            if (!isNaN(q2) && item.priority != parseInt(q2) ) { \r\n                                return false;\r\n                            }\r\n                        }\r\n                        if(q3){\r\n                            if (!isNaN(q3) && item.priority != parseInt(q3) ) { \r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                if (q4 && item.start_date.toLowerCase().indexOf(q5.toLowerCase()) === -1){\r\n                    return false;\r\n                }\r\n                if (q5 && item.start_date.toLowerCase().indexOf(q5.toLowerCase()) === -1){\r\n                    return false;\r\n                }\r\n                if (q6 && item.end_date.toLowerCase().indexOf(q6.toLowerCase()) === -1){\r\n                    return false;\r\n                }\r\n               \r\n                 return true;\r\n           })\r\n        }\r\n        else{\r\n            return items;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'findtaskname'\r\n})\r\nexport class FindtasknamePipe implements PipeTransform {\r\n\r\n  transform(taskId: any, tasks?: any): any {\r\n    let foundTask = tasks.filter(task=>task._id == taskId)[0];\r\n    return !!foundTask ? foundTask.task : '-' ;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \" <div class=\\\"container container-fluid\\\" style =\\\"font-size:11px;\\\">\\r\\n<div class=\\\"jumbotron jumbotronCallCenter\\\">\\r\\n<div class=\\\"row\\\" style=\\\"height:20%\\\">\\r\\n    <div class=\\\"col-md-6\\\" role=\\\"form\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"task\\\"><b>Task:</b></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"q1\\\" >\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"input-group-btn\\\">\\r\\n            <label for=\\\"priority_from\\\"><b>Priority From:</b></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"q2\\\" ></div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"input-group-btn\\\">\\r\\n            <label for=\\\"priority_to\\\"><b>Priority To:</b></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"q3\\\" ></div></div>\\r\\n            </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-6\\\" role=\\\"form\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"parent_task\\\"><b>Parent Task:</b></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"q4\\\" ></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"start_date\\\"><b>Start Date:</b></label>\\r\\n                <div class=\\\"input-group-btn\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"q5\\\" >\\r\\n        </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"start_date\\\"><b>End Date:</b></label>\\r\\n                <div class=\\\"input-group-btn\\\">\\r\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"q6\\\" >\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table table-hover\\\" style =\\\"font-size:12px;\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <td><b>Task Name</b></td>\\r\\n        <td><b>Parent Task</b></td>\\r\\n        <td><b>Priority</b></td>\\r\\n        <td><b>Start</b></td>\\r\\n        <td><b>End</b></td>\\r\\n        <td colspan=\\\"2\\\"></td>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n       <tr *ngFor=\\\"let TR of tasksResult | filter : q1: q2: q3: q4: q5: q6\\\">\\r\\n            <td>{{ TR.task }}</td>\\r\\n            <td>{{ TR.parent_id | findtaskname : tasksResult }}</td>\\r\\n            <td>{{ TR.priority }}</td>\\r\\n            <td>{{TR.start_date | date:\\\"dd-MMM-yyyy\\\"}}</td>\\r\\n            <td>{{TR.end_date | date:\\\"dd-MMM-yyyy\\\"}}</td>\\r\\n            <div *ngIf=\\\"TR.finished===false\\\">\\r\\n            <td><a [routerLink]=\\\"['/edit', TR._id]\\\" class=\\\"btn btn-primary btn-xs\\\">Edit</a></td>\\r\\n            <td><button (click)=\\\"finishingTask(TR._id)\\\"  class=\\\"btn btn-danger btn-xs\\\">End Task</button></td>\\r\\n                </div>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n  </table>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Tasks } from '../model/Tasks';\r\nimport { TasksService } from '../../tasks.service';\r\nimport { FilterPipe } from '../filters/filter.pipe';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  tasksResult : Tasks[];\r\n  searchText : string = '';\r\n  userFilter: any = '';\r\n\r\n    constructor( private route: ActivatedRoute,\r\n      private router: Router,private tasksservice: TasksService) { }\r\n  \r\n    ngOnInit() {\r\n      this.findalltask(); \r\n    }\r\n\r\n    findalltask()\r\n    {\r\n      this.tasksservice\r\n      .getAllTasks()\r\n      .subscribe((data: Tasks[]) => {\r\n      this.tasksResult = data;\r\n    });\r\n    }\r\n\r\n    \r\n    finishingTask(id) {\r\n         this.tasksservice.finishRecord(id);\r\n         window.location.reload();\r\n         this.router.navigate(['index']);\r\n      }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Tasks } from './components/model/Tasks';\r\nimport 'rxjs/Rx';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TasksService {\r\n\r\n  uri = 'http://localhost:4000/tm';\r\n  \r\n    constructor(private http: HttpClient) { }\r\n  \r\n    addTaskRecord(task,parent_id,priority,start_date,end_date) {\r\n\r\n     if(!parent_id)\r\n     parent_id = null;\r\n\r\n      const obj = {\r\n        task: task,\r\n        parent_id : parent_id,\r\n        priority: priority,\r\n        start_date : start_date,\r\n        end_date : end_date\r\n      };\r\n      this.http.post(`${this.uri}/add`, obj)\r\n          .subscribe( res => {console.log('Done');}, error => { this.ongetError(error)});\r\n    }\r\n\r\n      ongetError(error){}\r\n      \r\n      getAllTasks() \r\n      {\r\n        return this.http.get(`${this.uri}/`);\r\n      }\r\n     \r\n      getTaskByID(id) \r\n      {\r\n        return this.http.get(`${this.uri}/edit/${id}`);\r\n      }\r\n\r\n      updateRecord(task,priority,start_date,end_date, id)\r\n      {\r\n         const obj = {\r\n           task: task,\r\n           priority: priority,\r\n           start_date : start_date,\r\n           end_date : end_date\r\n         };\r\n          this\r\n          .http\r\n          .post(`${this.uri}/update/${id}`, obj)\r\n          .subscribe(res => console.log('Done'));\r\n      }\r\n\r\n      getTaskNameByID(parent_id)\r\n      {\r\n        \r\n      }\r\n\r\n      finishRecord(id) \r\n      {\r\n        const obj = { finsihed: true };\r\n         this\r\n        .http\r\n        .post(`${this.uri}/finish/${id}`, obj)\r\n        .subscribe(res => console.log('Done'));\r\n      }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}